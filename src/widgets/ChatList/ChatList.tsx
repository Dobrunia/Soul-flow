'use client';

import { useParams, useRouter } from 'next/navigation';
import { ChatList } from 'dobruniaui';

interface ChatItem {
  id: string;
  name: string;
  lastMessage: string;
  time: string;
  avatar?: string;
  isOnline?: boolean;
  unreadCount?: number;
}

const mockChats: ChatItem[] = [
  {
    id: '1',
    name: '–î–æ–±—Ä—ã–Ω—è',
    lastMessage: '',
    time: '',
    avatar: undefined,
    isOnline: true,
    unreadCount: 0,
  },
  {
    id: '2',
    name: '–ê–ª–∏—Å–∞ –ú–æ—Ä–æ–∑–æ–≤–∞',
    lastMessage: '–û—Ç–ª–∏—á–Ω–æ! –í—Å—Ç—Ä–µ—á–∞–µ–º—Å—è –∑–∞–≤—Ç—Ä–∞',
    time: '12:45',
    avatar: undefined,
    isOnline: false,
    unreadCount: 2,
  },
  {
    id: '3',
    name: '–ú–∞–∫—Å–∏–º Dev',
    lastMessage: '–ü—Ä–æ–≤–µ—Ä—å –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç, —Ç–∞–º...',
    time: '11:23',
    avatar: undefined,
    isOnline: false,
    unreadCount: 0,
  },
  {
    id: '4',
    name: '–ê—Ä—Ç—ë–º –ö—É–∑–Ω–µ—Ü–æ–≤',
    lastMessage: '–ö–æ—Ñ–µ –Ω–µ –∑–∞–±—É–¥—å! ‚òï',
    time: '10:07',
    avatar: undefined,
    isOnline: false,
    unreadCount: 1,
  },
  {
    id: '5',
    name: '–ú–∞—Ä–∏—è –ë–µ–ª–∫–∏–Ω–∞',
    lastMessage: '–î–æ–∫—É–º–µ–Ω—Ç—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∞ –Ω–∞ –ø–æ—á—Ç—É, ...',
    time: '09:41',
    avatar: undefined,
    isOnline: false,
    unreadCount: 0,
  },
  {
    id: '6',
    name: '–î–µ–Ω–∏—Å –í–æ–ª–∫–æ–≤',
    lastMessage: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–º–æ—â—å ! üôè',
    time: '08:15',
    avatar: undefined,
    isOnline: false,
    unreadCount: 1,
  },
  {
    id: '7',
    name: '–°–æ—Ñ—å—è –õ–µ–±–µ–¥–µ–≤–∞',
    lastMessage: '–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –Ω—É–∂–Ω–æ –Ω–∞ –¥–æ—Ä–∞–±...',
    time: '07:52',
    avatar: undefined,
    isOnline: false,
    unreadCount: 0,
  },
  {
    id: '8',
    name: 'Frontend Team',
    lastMessage: '–†–µ–ª–∏–∑ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–ª—Å—è –Ω–æ –Ω–∞—á–∞—Ç—å...',
    time: '–í—á–µ—Ä–∞',
    avatar: undefined,
    isOnline: false,
    unreadCount: 0,
  },
];

export default function ChatListComponent() {
  const params = useParams();
  const router = useRouter();
  const selectedChatId = params?.chatId as string;

  // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  const isLoading = false;

  const handleChatSelect = (chatId: string) => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º Next.js router –¥–ª—è –±–µ—Å—à–æ–≤–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    router.push(`/chats/${chatId}`);
  };

  return (
    <ChatList
      items={mockChats}
      selectedId={selectedChatId}
      onSelect={handleChatSelect}
      loading={isLoading}
      skeletonCount={6}
      className='h-full'
    />
  );
}
